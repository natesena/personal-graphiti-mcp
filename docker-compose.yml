services:
  graph:
    build:
      context: .
    ports:
      - "8002:8000"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:${NEO4J_PORT}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PORT=8000
  neo4j:
    image: neo4j:5.26.2
    healthcheck:
      test: wget "http://localhost:${NEO4J_PORT}" || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    ports:
      - "7474:7474" # HTTP
      - "${NEO4J_PORT}:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    entrypoint: >
      sh -c "
        ollama serve & 
        sleep 2 && 
        ollama pull ${EMBEDDER_MODEL_NAME} && 
        ollama pull ${DEFAULT_LLM_MODEL} && 
        ollama pull ${SMALL_LLM_MODEL} && 
        wait
      "
    environment:
      - SMALL_LLM_MODEL=${SMALL_LLM_MODEL}
      - DEFAULT_LLM_MODEL=${DEFAULT_LLM_MODEL}
      - EMBEDDER_MODEL_NAME=${EMBEDDER_MODEL_NAME}

  graphiti-mcp:
    build:
      context: .
      dockerfile: mcp_server/Dockerfile
    env_file:
      - .env
    depends_on:
      neo4j:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PORT=7687
      - NEO4J_PASSWORD=demodemo
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - EMBEDDER_MODEL_NAME=${EMBEDDER_MODEL_NAME}
      - MODEL_NAME=${DEFAULT_LLM_MODEL}
      - DEFAULT_LLM_MODEL=${DEFAULT_LLM_MODEL}
      - SMALL_LLM_MODEL=${SMALL_LLM_MODEL}
      - PATH=/root/.local/bin:${PATH}
      - USE_CUSTOM_ENTITIES=true
    ports:
      - "8000:8000"
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]

volumes:
  neo4j_data:
  neo4j_logs:
  ollama_data:
